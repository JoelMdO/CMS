{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/services/api/rate_limit.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport 'server-only';\n\nconst duration = Number(process.env.NEXT_PUBLIC_RATE_LIMIT_WINDOW_MINUTES); \nconst limit = Number(process.env.NEXT_PUBLIC_MAX_REQUESTS_PER_WINDOW);\nconst req = new Map();\n\nexport default async function rateLimit(request: any) {\n    \n    let ip = request.headers.get('x-forwarded-for') || request.headers.get('x-real-ip') || \"unknown\" ;\n    let pathname = new URL(request.url).pathname;\n    const currentTime = Date.now();\n\n    if (!ip) {\n        return new NextResponse(\n            JSON.stringify({ message: 'Unable to determine IP address' }),\n            { status: 400, headers: { 'Content-Type': 'application/json' } }\n        );\n    }\n    const key = `${ip}:${pathname}`; // Different key for each endpoint\n    try {\n        if(!req.has(key)) {\n            req.set(key, { count: 1, lastRequest: currentTime });\n            return NextResponse.next();\n        } else {\n            const { count, lastRequest } = req.get(key);\n            if (currentTime - lastRequest > duration * 60 * 1000) {\n                req.set(key, { count: 1, lastRequest: currentTime });\n                return NextResponse.next();\n            } else if (count >= limit) {\n                return new NextResponse(\n                    JSON.stringify({ error: 'Too many requests. Please try again later.' }),\n                    { status: 429, headers: { 'Content-Type': 'application/json' } }\n                );\n            } else {\n                req.set(key, { count: count + 1, lastRequest: currentTime });\n                return NextResponse.next();\n            }\n        }\n    } catch (error) {\n        return new NextResponse(\n            JSON.stringify({ error: 'Firebase initialization failed' }),\n            { status: 500, headers: { 'Content-Type': 'application/json' } }\n        );\n    }\n};\n\nexport const config = {\n    matcher: ['/api/:path*'],\n};"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;;;AAEA,MAAM,WAAW;AACjB,MAAM,QAAQ;AACd,MAAM,MAAM,IAAI;AAED,eAAe,UAAU,OAAY;IAEhD,IAAI,KAAK,QAAQ,OAAO,CAAC,GAAG,CAAC,sBAAsB,QAAQ,OAAO,CAAC,GAAG,CAAC,gBAAgB;IACvF,IAAI,WAAW,IAAI,IAAI,QAAQ,GAAG,EAAE,QAAQ;IAC5C,MAAM,cAAc,KAAK,GAAG;IAE5B,uCAAS;;IAKT;IACA,MAAM,MAAM,GAAG,GAAG,CAAC,EAAE,UAAU,EAAE,kCAAkC;IACnE,IAAI;QACA,IAAG,CAAC,IAAI,GAAG,CAAC,MAAM;YACd,IAAI,GAAG,CAAC,KAAK;gBAAE,OAAO;gBAAG,aAAa;YAAY;YAClD,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;QAC5B,OAAO;YACH,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,GAAG,IAAI,GAAG,CAAC;YACvC,IAAI,cAAc,cAAc,WAAW,KAAK,MAAM;gBAClD,IAAI,GAAG,CAAC,KAAK;oBAAE,OAAO;oBAAG,aAAa;gBAAY;gBAClD,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;YAC5B,OAAO,IAAI,SAAS,OAAO;gBACvB,OAAO,IAAI,6LAAA,CAAA,eAAY,CACnB,KAAK,SAAS,CAAC;oBAAE,OAAO;gBAA6C,IACrE;oBAAE,QAAQ;oBAAK,SAAS;wBAAE,gBAAgB;oBAAmB;gBAAE;YAEvE,OAAO;gBACH,IAAI,GAAG,CAAC,KAAK;oBAAE,OAAO,QAAQ;oBAAG,aAAa;gBAAY;gBAC1D,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;YAC5B;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,OAAO,IAAI,6LAAA,CAAA,eAAY,CACnB,KAAK,SAAS,CAAC;YAAE,OAAO;QAAiC,IACzD;YAAE,QAAQ;YAAK,SAAS;gBAAE,gBAAgB;YAAmB;QAAE;IAEvE;AACJ;AAEO,MAAM,SAAS;IAClB,SAAS;QAAC;KAAc;AAC5B"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport rateLimit from './services/api/rate_limit';\n\nexport async function middleware(req: NextRequest) {\n\n///----------------------------------------------------------------\n// Check in case of subrequest\n///----------------------------------------------------------------\nconst path = req.nextUrl.pathname;\nlet rateLimitResponse: NextResponse;\nlet response: NextResponse = NextResponse.next();\nconst database_url = process.env.NEXT_PUBLIC_databaseURL;\nconsole.log('pathname', path);\n\nif(path.startsWith('/dashboard') || path.startsWith('/playbook') || path.startsWith('/read-playbook')) {\n  //Get the previous path\n  console.log('doing /path', path);\n  \n  const referrer = req.headers.get(\"referer\") || \"\";\n  const referrerUrl = referrer ? new URL(referrer) : null;\n  const referrerPAth = referrerUrl?.pathname || \"\";\n  console.log(`access to ${path} from referrer ${referrerPAth}`);\n  if (referrerPAth === '/'){\n    rateLimitResponse = await rateLimit(req);\n    if (rateLimitResponse.status === 200) {\n      return response;\n    } else {\n      return NextResponse.redirect(new URL('/', req.url));\n    }\n  } else {\n    return NextResponse.redirect(new URL('/', req.url));\n  }\n}\n//\nconst header = req.headers;\nconst isSubRequest = header.get('x-middleware-subrequest');\nif (isSubRequest) {\n  const origin = header.get('origin') || header.get('referer');\n  console.log('origin at middlewre', origin);\n  \n  const url = process.env.NEXT_PUBLIC_api_url;\n\n  if (!origin || origin != url) {\n    return NextResponse.json({ status: 403, error: 'Unauthorized request' });\n  }\n}\n///----------------------------------------------------------------\n///------ Check for any rate limits on other paths ----------------\n///----------------------------------------------------------------\n    //Apply rate Limit.\n    rateLimitResponse = await rateLimit(req);\n///----------------------------------------------------------------\n///------ Add headers ----------------\n///----------------------------------------------------------------\n    response.headers.set(\n      'Content-Security-Policy',\n      `\n      default-src 'self';\n      script-src 'self';\n      style-src 'self';\n      img-src 'self';\n      font-src 'self';\n      connect-src 'self' ${database_url};\n      object-src 'none';\n      base-uri 'self';\n      form-action 'self';            \n      frame-ancestors 'self';\n      upgrade-insecure-requests;\n      block-all-mixed-content;\n      `.replace(/\\s{2,}/g, ' ').trim()\n    );\n    return response;\n}\n\nexport const config = {\n  matcher: ['/api/post', '/dashboard', '/playbook', '/read-playbook'],\n};\n\n"],"names":[],"mappings":";;;;AAAA;AAAA;AACA;;;AAEO,eAAe,WAAW,GAAgB;IAEjD,mEAAmE;IACnE,8BAA8B;IAC9B,mEAAmE;IACnE,MAAM,OAAO,IAAI,OAAO,CAAC,QAAQ;IACjC,IAAI;IACJ,IAAI,WAAyB,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC9C,MAAM,eAAe,QAAQ,GAAG,CAAC,uBAAuB;IACxD,QAAQ,GAAG,CAAC,YAAY;IAExB,IAAG,KAAK,UAAU,CAAC,iBAAiB,KAAK,UAAU,CAAC,gBAAgB,KAAK,UAAU,CAAC,mBAAmB;QACrG,uBAAuB;QACvB,QAAQ,GAAG,CAAC,eAAe;QAE3B,MAAM,WAAW,IAAI,OAAO,CAAC,GAAG,CAAC,cAAc;QAC/C,MAAM,cAAc,WAAW,IAAI,IAAI,YAAY;QACnD,MAAM,eAAe,aAAa,YAAY;QAC9C,QAAQ,GAAG,CAAC,CAAC,UAAU,EAAE,KAAK,eAAe,EAAE,cAAc;QAC7D,IAAI,iBAAiB,KAAI;YACvB,oBAAoB,MAAM,CAAA,GAAA,4IAAA,CAAA,UAAS,AAAD,EAAE;YACpC,IAAI,kBAAkB,MAAM,KAAK,KAAK;gBACpC,OAAO;YACT,OAAO;gBACL,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,IAAI,GAAG;YACnD;QACF,OAAO;YACL,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,IAAI,GAAG;QACnD;IACF;IACA,EAAE;IACF,MAAM,SAAS,IAAI,OAAO;IAC1B,MAAM,eAAe,OAAO,GAAG,CAAC;IAChC,IAAI,cAAc;QAChB,MAAM,SAAS,OAAO,GAAG,CAAC,aAAa,OAAO,GAAG,CAAC;QAClD,QAAQ,GAAG,CAAC,uBAAuB;QAEnC,MAAM,MAAM,QAAQ,GAAG,CAAC,mBAAmB;QAE3C,IAAI,CAAC,UAAU,UAAU,KAAK;YAC5B,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,QAAQ;gBAAK,OAAO;YAAuB;QACxE;IACF;IACA,mEAAmE;IACnE,mEAAmE;IACnE,mEAAmE;IAC/D,mBAAmB;IACnB,oBAAoB,MAAM,CAAA,GAAA,4IAAA,CAAA,UAAS,AAAD,EAAE;IACxC,mEAAmE;IACnE,sCAAsC;IACtC,mEAAmE;IAC/D,SAAS,OAAO,CAAC,GAAG,CAClB,2BACA,CAAC;;;;;;yBAMkB,EAAE,aAAa;;;;;;;MAOlC,CAAC,CAAC,OAAO,CAAC,WAAW,KAAK,IAAI;IAEhC,OAAO;AACX;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAa;QAAc;QAAa;KAAiB;AACrE"}}]
}